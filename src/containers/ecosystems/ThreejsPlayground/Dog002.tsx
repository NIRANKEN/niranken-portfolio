/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/models/dog002.glb --types --draco 
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh;
    Mesh_1: THREE.Mesh;
    Eyes: THREE.Mesh;
  };
  materials: {
    Body: THREE.MeshStandardMaterial;
    Nose: THREE.MeshStandardMaterial;
    Eyes: THREE.MeshStandardMaterial;
  };
};

// type ContextType = Record<
//   string,
//   React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
// >;

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/dog002.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[0, 1, 0]} scale={[3.114, 6.227, 6.227]}>
        <mesh geometry={nodes.Mesh.geometry} material={materials.Body} />
        <mesh geometry={nodes.Mesh_1.geometry} material={materials.Nose} />
      </group>
      <mesh geometry={nodes.Eyes.geometry} material={materials.Eyes} />
    </group>
  );
}

useGLTF.preload('/models/dog002.glb');
